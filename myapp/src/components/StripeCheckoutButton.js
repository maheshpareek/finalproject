import React from 'react'; // Import React to create the component
import StripeCheckout from 'react-stripe-checkout'; // Import StripeCheckout component for handling payments
import axios from 'axios'; // Import axios for making HTTP requests to the backend
import './css/StripeCheckoutButton.css'; // Import CSS for styling the StripeCheckoutButton component

// StripeCheckoutButton component to handle Stripe payment processing
const StripeCheckoutButton = ({ amount }) => {
  const stripeKey = process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY; // Get the Stripe publishable key from environment variables
  const amountInCents = amount ? Math.round(amount * 100) : 0; // Convert the amount to cents if it is defined, or set to 0

  // Function to handle the payment token received from Stripe
  const handleToken = async (token) => {
    try {
      // Send the payment details to the backend for processing
      const response = await axios.post('http://localhost:5000/api/checkout', {
        amount: amountInCents, // The total amount in cents
        token, // The payment token generated by Stripe
      });
      console.log('Payment Success:', response.data); // Log the success response
      alert('Payment Successful!'); // Display a success message to the user
    } catch (error) {
      console.error('Payment Error:', error); // Log any errors that occur
      alert('Payment Error. Please try again.'); // Display an error message to the user
    }
  };

  console.log('Amount in StripeCheckoutButton:', amount); // Debug log to check the amount being passed

  return (
    <div className="stripe-checkout-container">
      <StripeCheckout
        stripeKey={stripeKey} // The Stripe publishable key
        token={handleToken} // Function to handle the token received from Stripe
        amount={amountInCents} // The total amount in cents to be charged
        currency="USD" // Set the currency to USD
        billingAddress // Enable billing address collection
        shippingAddress // Enable shipping address collection
        description={`Your total is $${amount?.toFixed(2) || '0.00'}`} // Set the description with the total amount
        panelLabel={`Pay`} // Set the label on the payment button
      >
        <button className="stripe-checkout-button">
          Pay ${amount?.toFixed(2) || '0.00'} {/* Display the payment amount on the button */}
        </button>
      </StripeCheckout>
    </div>
  );
};

export default StripeCheckoutButton; // Export the StripeCheckoutButton component for use in other parts of the application
